// Question 1

/* For this exercise you need to have Conversion.c or Conversion. f 90. 

1. Compile and the program.
	The program is compiled successfully.

2. Notice that as we explained in the lectures the floating point and integer presentations do
not give the correct result.
	This is because of the rounding in the floating point arithematics.


3. How many binary digits are there in the number and how many can a float/real represent.
	There are 25 binary digits in the number.
	The single precision can represent 7 decimal point.
	the double precision can represent 15 decimal point.

4. Letâ€™s say we want to check the number of binary digits. Construct an expression in the code
that will do this.
	The code is attached in the git branch.

5. For C use the function log f , which is part of the maths library.
	numdigits = ceil(logf(fnum)/log(2))
*/



//Question 2

/*For this exercise use Sum.c or Sum. f 90.
1. Complete the code to make the sum:
	The program is compiled successfully.
2. Print out the difference between the two sums.
	The difference is 0.0000007
3. Is there a difference between sum1 and sum2 and are the two sums mathematically the same
or not?
	There is a difference between sum1 and sum2 due to rounding in the floating point arothematics. But the two sums are mathematically the same.
*/
